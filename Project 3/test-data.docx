Project 3 Test Data
You had to implement the functions with the specified signatures. In particular, you could not change the number or types of the parameters (e.g., changing int to int&).

There were 46 test cases, worth 75 points in all:

performCommands, error cases
Test #	Points	Command	Return
value	Resulting
bad position
1	2	HCCC	1	1
2	2	H-CCC	1	2
3	2	H123	1	3
4	2	F\tC	1	1
5	2	@CCC	1	0
6	2	CCCV	1	4
7	2	CCCV-	1	5
8	2	CCCB	1	4
16	2	H9H9H9H3	2	6
17	2	V18V02	2	3
18	2	H03H-04	2	3
19	2	V3V-4	2	2
Notes
In all cases, performCommands was called with the plot character being * and the mode being 0 (FG).

Except for tests 3 and 16 though 19, your code must not plot any nonblank characters.

For test 4, note that isprint('\t') is false.

For tests 6 through 8, we arranged so that the characters in the undefined positions just past the end of the command string would be digit characters in order to test that your code didn't try to access a character past the end of the string.

performCommands, valid cases
Test #	Points	Command	Return
value	Resulting
bad position	Resulting
plot char	Resulting
fgbg	Points plotted
9	2	FBCBFH1	0	unchanged	*	0 (FG)	F at (1,1), (1,2)
10	2	H3V2	0	unchanged	*	0 (FG)	* at (1,1), (1,2), (1,3), (1,4), (2,4), (3,4)
11	2	H3V2CV1	0	unchanged	*	0 (FG)	* at (1,1), (2,1)
12	2	H3F%V2	0	unchanged	*	0 (FG)	* at (1,1), (1,2), (1,3);
% at (1,4), (2,4), (3,4)
13	2	V3B%H2	0	unchanged	*	0 (FG)	* at (1,1), (2,1), (3,1), (4,1);
% at (4,2), (4,3)
14	2	H3F%V2B$H1	0	unchanged	*	0 (FG)	* at (1,1), (1,2), (1,3);
% at (1,4), (2,4), (3,4);
$ at (3,5)
15	2	H3B%V2CH1	0	unchanged	*	0 (FG)	* at (1,1), (1,2)
20	1	H1	0	unchanged	*	0 (FG)	* at (1,1), (1,2)
21	1	F#	0	unchanged	#	0 (FG)	none
22	1	B$	0	unchanged	$	1 (BG)	none
23	1	H0	0	unchanged	*	0 (FG)	* at (1,1)
24	1	v02	0	unchanged	*	0 (FG)	* at (1,1), (2,1), (3,1)
25	1	F (blank after the F)	0	unchanged	(blank)	0 (FG)	none
Notes
In all cases, performCommands was called with the plot character being * and the mode being 0 (FG).

plotLine
Test #	Points	Row	Column	Distance	Direction	Plot char	fgbg	Return
value	Points plotted
26	1	0	1	1	1 (VERT)	#	0 (FG)	false	none
27	1	-1	1	1	1 (VERT)	#	0 (FG)	false	none
28	1	1	0	1	0 (HORIZ)	#	0 (FG)	false	none
29	1	1	-1	1	1 (HORIZ)	#	0 (FG)	false	none
30	1	20	1	-1	1 (VERT)	#	0 (FG)	true	# at (20,1), (19,1)
31	1	21	1	-1	1 (VERT)	#	0 (FG)	false	none
32	1	1	30	-1	0 (HORIZ)	#	0 (FG)	true	# at (1,30), (1,29)
33	1	1	31	-1	0 (HORIZ)	#	0 (FG)	false	none
34	1	1	1	1	2	#	0 (FG)	false	none
35	1	1	1	1	0 (HORIZ)	\t	0 (FG)	false	none
36	1	1	1	1	0 (HORIZ)	#	2	false	none
37	2	10	15	2	0 (HORIZ)	#	0 (FG)	true	# at (10,15), (10,16), (10,17)
38	2	10	15	-2	0 (HORIZ)	$	0 (FG)	true	$ at (10,15), (10,14), (10,13)
39	2	10	15	2	1 (VERT)	#	0 (FG)	true	# at (10,15), (11,15), (12,15)
40	2	10	15	-2	1 (VERT)	$	0 (FG)	true	$ at (10,15), (9,15), (8,15)
41	2	10	15	0	0 (HORIZ)	#	0 (FG)	true	# at (10,15)
42	2	10	15	0	1 (VERT)	#	0 (FG)	true	# at (10,15)
43	2	10	15	1	1 (VERT)	A	0 (FG)	true	A at (10,15), (11,15)
44	2	10	15	2	0 (HORIZ)	(blank)	0 (FG)	true	none (see note)
45	2	10	15	2	0 (HORIZ)	(blank)	1 (BG)	true	none
46	2	10	15	2	0 (HORIZ)	(blank)	1 (BG)	true	X at (10,16) (see note)
Notes
For test 35, note that isprint('\t') is false.

For tests 44 and 46, an X was placed at (10,16) before plotLine was called.
